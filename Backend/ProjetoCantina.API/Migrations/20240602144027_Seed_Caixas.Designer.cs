// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoCantina.API.Contexts;

#nullable disable

namespace ProjetoCantina.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240602144027_Seed_Caixas")]
    partial class Seed_Caixas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProjetoCantina.API.Models.Caixa", b =>
                {
                    b.Property<int>("CaixaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CaixaID"));

                    b.Property<string>("CodigoUnico")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<DateTime>("DataAbertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("INT");

                    b.HasKey("CaixaID");

                    b.HasIndex("CodigoUnico")
                        .IsUnique();

                    b.HasIndex("UsuarioID");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.FluxoCaixa", b =>
                {
                    b.Property<int>("FluxoCaixaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FluxoCaixaID"));

                    b.Property<ulong>("CaixaFechado")
                        .HasColumnType("BIT");

                    b.Property<int>("CaixaID")
                        .HasColumnType("INT");

                    b.Property<DateTime>("DataAbertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime>("DataFechamento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("INT");

                    b.Property<decimal>("ValorAbertura")
                        .HasColumnType("NUMERIC(10,2)");

                    b.Property<decimal>("ValorFechamento")
                        .HasColumnType("NUMERIC(10,2)");

                    b.HasKey("FluxoCaixaID");

                    b.HasIndex("CaixaID")
                        .IsUnique();

                    b.ToTable("FluxoCaixa");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProdutoID"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("INT");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<int>("Estoque")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("NUMERIC(10,2)");

                    b.HasKey("ProdutoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("CodigoBarras")
                        .IsUnique();

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("NomeUsuario")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Venda", b =>
                {
                    b.Property<int>("VendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VendaID"));

                    b.Property<int>("CaixaID")
                        .HasColumnType("INT");

                    b.Property<DateTime>("DataVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("INT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("INT");

                    b.HasKey("VendaID");

                    b.HasIndex("CaixaID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Caixa", b =>
                {
                    b.HasOne("ProjetoCantina.API.Models.Usuario", "Usuario")
                        .WithMany("Caixas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.FluxoCaixa", b =>
                {
                    b.HasOne("ProjetoCantina.API.Models.Caixa", "Caixa")
                        .WithOne("FluxoCaixa")
                        .HasForeignKey("ProjetoCantina.API.Models.FluxoCaixa", "CaixaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Produto", b =>
                {
                    b.HasOne("ProjetoCantina.API.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Venda", b =>
                {
                    b.HasOne("ProjetoCantina.API.Models.Caixa", "Caixa")
                        .WithMany("Vendas")
                        .HasForeignKey("CaixaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCantina.API.Models.Produto", "Produto")
                        .WithMany("Vendas")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Caixa", b =>
                {
                    b.Navigation("FluxoCaixa");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Produto", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ProjetoCantina.API.Models.Usuario", b =>
                {
                    b.Navigation("Caixas");
                });
#pragma warning restore 612, 618
        }
    }
}
